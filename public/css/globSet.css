html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

body {
  margin: 0;
  font-family: "asd", sans-serif;
  background-color: var(--color-white);
}

img {
  max-width: 100%;
}

a {
  text-decoration: none;
}

.list--reset {
  list-style: none;
  padding: 0;
  margin: 0;
}

.is-outer {
  position: relative !important;
  left: -9999px !important;
}

.site-container {
  overflow: hidden;
}

.is-hidden {
  display: none !important;
}

.for-mobile {
  display: none;
}
@media (max-width: 576px) {
  .for-mobile {
    display: block;
  }
}

.error {
  border: 2px #ff4019 solid !important;
}

.btn-reset {
  border: none;
  background: transparent;
  cursor: pointer;
  padding: 0;
  outline: none;
}

.container {
  margin: 0 auto;
  padding: 0 15px;
  max-width: 1210px;
}

.grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: var(--grid-gap);
}
@media (max-width: 576px) {
  .grid {
    grid-template-columns: repeat(4, 1fr);
  }
}

.btn {
  padding: 22px 47px;
  border-radius: 4px;
  font: var(--middle-font);
  -webkit-transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;
  -o-transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;
  transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;
  outline: none;
  border: none;
}
.btn--primary {
  background-color: var(--color-accent);
  color: var(--color-white);
}
.btn--primary:active {
  background-color: var(--color-btn-active);
}
@media (min-width: 1025px) {
  .btn--primary:hover {
    background-color: var(--color-accent-hover);
  }
}
.btn--secondary {
  background-color: var(--color-main);
  color: var(--color-white);
  width: 100%;
  padding: 22px 0;
  margin-bottom: var(--bottom-ofset);
}
.btn--secondary:active {
  background-color: var(--color-btn-active);
}
@media (min-width: 1025px) {
  .btn--secondary:hover {
    background-color: var(--color-main-hover);
  }
}
.btn--third {
  border: 1px solid var(--color-main);
  background-color: transparent;
  border-radius: 4px;
  font: var(--title-book);
  padding: 17px var(--main-ofset);
}
.btn--third:active {
  background-color: var(--color-btn-active);
}
@media (min-width: 1025px) {
  .btn:hover {
    background-color: var(--color-main);
    color: var(--color-white);
  }
}

.btn--primary.focus-visible {
  background-color: var(--color-main);
}

.btn--secondary.focus-visible {
  background-color: var(--color-main-hover);
}

.btn--third.focus-visible {
  background-color: var(--color-main);
  color: var(--color-white);
}

.title {
  margin: 0;
  margin-bottom: var(--main-ofset);
  font: var(--middle-high);
  color: var(--color-main);
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  border: 0;
  clip: rect(0 0 0 0);
}

p {
  margin: 0;
  padding: 0;
}

.tooltip {
  position: relative;
}
.tooltip__btn {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: 20px;
  height: 20px;
  border-radius: 100%;
  -webkit-box-shadow: 2px 4px 10px rgba(0, 13, 84, 0.2);
          box-shadow: 2px 4px 10px rgba(0, 13, 84, 0.2);
  margin-left: var(--bottom-ofset);
}
.tooltip__btn svg {
  width: 7px;
  height: 10px;
}
.tooltip__txt {
  position: absolute;
  left: -10px;
  bottom: calc(100% + 15px);
  z-index: 15;
  padding: var(--small-ofset) var(--bottom-ofset);
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
  max-width: 426px;
  opacity: 0;
  visibility: hidden;
  -webkit-transform: rotateY(10px);
          transform: rotateY(10px);
  -webkit-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
  -o-transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out, visibility 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out, visibility 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
  background-color: var(--color-white);
  font: var(--small-font);
  color: var(--color-main);
  text-transform: initial;
  -webkit-box-shadow: 4px 8px 20px rgba(0, 13, 84, 0.2);
          box-shadow: 4px 8px 20px rgba(0, 13, 84, 0.2);
}
.tooltip__txt::after {
  content: "";
  position: absolute;
  left: 10px;
  bottom: -8px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 8px 8.5px 0 8.5px;
  border-color: var(--color-white) transparent transparent transparent;
  border-radius: 4px;
}

.tooltip__btn:hover + .tooltip__txt {
  opacity: 1;
  visibility: visible;
  -webkit-transform: rotateY(10px);
          transform: rotateY(10px);
}

.tooltip__btn:focus + .tooltip__txt {
  opacity: 1;
  visibility: visible;
  -webkit-transform: rotateY(10px);
          transform: rotateY(10px);
}

.input {
  border: none;
  background-color: var(--color-white);
  width: 100%;
  height: 60px;
  border-radius: 4px;
  padding: var(--bottom-ofset);
  color: var(--color-main);
  font: var(--middle-font);
}
.input::-webkit-input-placeholder {
  color: var(--color-grey);
  font: var(--middle-font);
}
.input::-moz-placeholder {
  color: var(--color-grey);
  font: var(--middle-font);
}
.input:-ms-input-placeholder {
  color: var(--color-grey);
  font: var(--middle-font);
}
.input::-ms-input-placeholder {
  color: var(--color-grey);
  font: var(--middle-font);
}
.input::placeholder {
  color: var(--color-grey);
  font: var(--middle-font);
}

.insta__input-wrpapper {
  display: block;
  position: relative;
  width: 100%;
}
.insta__input-wrpapper .js-validate-error-label {
  margin-bottom: 10px;
}

.cart-modal-order .js-validate-error-label {
  margin-bottom: 10px;
}

:root {
  --color-black: #000;
  --color-white: #fff;
  --color-main: #444B58;
  --color-main-hover:#31343C;
  --color-EastBay:#484283;
  --color-Cameo:#DBBBA9;
  --color-grey:#B2B5BB;
  --color-Darkgrey:#808080;
  --color-accent:#F14F4F;
  --color-accent-hover:#CC4949;
  --color-border:rgba(255, 255, 255, 0.5);
  --color-bg:#FFF4EE;
  --color-btn-active:#8C2828;
  --grid-gap:20px;
  --small-ofset:10px;
  --main-ofset:40px;
  --bottom-ofset:20px;
  --big-ofset:60px;
  --font-family:"Intro", sans-serif;
  --middle-high: 700 30px / 140% var(--font-family);
  --h3-book: 400 24px / 24px var(--font-family);
  --title-book: 400 16px / 16px var(--font-family);
  --middle-font: 400 16px / 140% var(--font-family);
  --small-font: 400 14px / 140% var(--font-family);
  --text-font: 400 16px / 22.4px var(--font-family);
}

@media (max-width: 576px) {
  :root {
    --grid-gap:10px;
    --small-ofset:8px;
    --main-ofset:20px;
    --bottom-ofset:10px;
    --big-ofset:30px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zZXR0aW5ncy5zY3NzIiwiZ2xvYlNldC5jc3MiLCJtaXhpbnMvX2JyZWFrcG9pbnQuc2NzcyIsIl92YXJzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSw4QkFBQTtVQUFBLHNCQUFBO0FDQUY7O0FER0E7OztFQUdFLDJCQUFBO1VBQUEsbUJBQUE7QUNBRjs7QURHQTtFQUNFLFNBQUE7RUFDQSw4QkFBQTtFQUNBLG9DQUFBO0FDQUY7O0FER0E7RUFDRSxlQUFBO0FDQUY7O0FER0E7RUFDRSxxQkFBQTtBQ0FGOztBREdBO0VBQ0UsZ0JBQUE7RUFDQSxVQUFBO0VBQ0EsU0FBQTtBQ0FGOztBREdBO0VBQ0UsNkJBQUE7RUFDQSx3QkFBQTtBQ0FGOztBREdBO0VBQ0UsZ0JBQUE7QUNBRjs7QURHQTtFQUNFLHdCQUFBO0FDQUY7O0FER0E7RUFDRSxhQUFBO0FDQUY7QUN6QkU7RUZ3QkY7SUFJSSxjQUFBO0VDQ0Y7QUFDRjs7QURFQTtFQUNFLG9DQUFBO0FDQ0Y7O0FERUE7RUFDRSxZQUFBO0VBQ0EsdUJBQUE7RUFDQSxlQUFBO0VBQ0EsVUFBQTtFQUNBLGFBQUE7QUNDRjs7QURFQTtFQUNFLGNBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNDRjs7QURNQTtFQUNFLGFBQUE7RUFDQSxzQ0FBQTtFQUNBLG9CQUFBO0FDSEY7QUN0REU7RUZzREY7SUFLSSxxQ0FBQTtFQ0RGO0FBQ0Y7O0FER0E7RUFDRSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0Esd0JBQUE7RUFDQSw2RUFBQTtFQUFBLHdFQUFBO0VBQUEscUVBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtBQ0FGO0FERUU7RUFDRSxxQ0FBQTtFQUNBLHlCQUFBO0FDQUo7QURDSTtFQUNFLHlDQUFBO0FDQ047QUM5RkU7RUZpR0k7SUFDRSwyQ0FBQTtFQ0FOO0FBQ0Y7QURLRTtFQUNFLG1DQUFBO0VBQ0EseUJBQUE7RUFDQSxXQUFBO0VBQ0EsZUFBQTtFQUNBLGtDQUFBO0FDSEo7QURJSTtFQUNF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QSxpREFBQTtBRjRQRjs7QUN2UUU7RUNjQTtJQUNFLGVBQUE7SUFDQSxpQkFBQTtJQUNBLGlCQUFBO0lBQ0EsbUJBQUE7SUFDQSxnQkFBQTtFRjZQRjtBQUNGIiwiZmlsZSI6Imdsb2JTZXQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIl9taXhpbnMuc2Nzc1wiO1xyXG5odG1sIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG4qLFxyXG4qOjpiZWZvcmUsXHJcbio6OmFmdGVyIHtcclxuICBib3gtc2l6aW5nOiBpbmhlcml0O1xyXG59XHJcblxyXG5ib2R5IHtcclxuICBtYXJnaW46IDA7XHJcbiAgZm9udC1mYW1pbHk6IFwiYXNkXCIsIHNhbnMtc2VyaWY7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3Itd2hpdGUpO1xyXG59XHJcblxyXG5pbWcge1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxufVxyXG5cclxuYSB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcblxyXG4ubGlzdC0tcmVzZXQge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgcGFkZGluZzogMDtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbi5pcy1vdXRlciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlICFpbXBvcnRhbnQ7IC8vIHN0eWxlbGludC1kaXNhYmxlLWxpbmUgZGVjbGFyYXRpb24tbm8taW1wb3J0YW50XHJcbiAgbGVmdDogLTk5OTlweCAhaW1wb3J0YW50OyAvLyBzdHlsZWxpbnQtZGlzYWJsZS1saW5lIGRlY2xhcmF0aW9uLW5vLWltcG9ydGFudFxyXG59XHJcblxyXG4uc2l0ZS1jb250YWluZXIge1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5pcy1oaWRkZW4ge1xyXG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgLy8gc3R5bGVsaW50LWRpc2FibGUtbGluZSBkZWNsYXJhdGlvbi1uby1pbXBvcnRhbnRcclxufVxyXG5cclxuLmZvci1tb2JpbGUge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcblxyXG4gIEBpbmNsdWRlIG1vYmlsZSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICB9XHJcbn1cclxuXHJcbi5lcnJvciB7XHJcbiAgYm9yZGVyOiAycHggI2ZmNDAxOSBzb2xpZCAhaW1wb3J0YW50OyAvLyBzdHlsZWxpbnQtZGlzYWJsZS1saW5lIGRlY2xhcmF0aW9uLW5vLWltcG9ydGFudFxyXG59XHJcblxyXG4uYnRuLXJlc2V0IHtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgb3V0bGluZTogbm9uZTtcclxufVxyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgcGFkZGluZzogMCAxNXB4O1xyXG4gIG1heC13aWR0aDogMTIxMHB4O1xyXG59XHJcblxyXG4vLyAuanMtZm9jdXMtdmlzaWJsZSA6Zm9jdXM6bm90KC5mb2N1cy12aXNpYmxlKSB7XHJcbi8vICAgb3V0bGluZTogcmVkO1xyXG4vLyAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcclxuLy8gfVxyXG4uZ3JpZHtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEyLCAxZnIpO1xyXG4gIGdhcDogdmFyKC0tZ3JpZC1nYXApO1xyXG4gIEBpbmNsdWRlIG1vYmlsZXtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XHJcbiAgfVxyXG59XHJcbi5idG57XHJcbiAgcGFkZGluZzogMjJweCA0N3B4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBmb250OiB2YXIoLS1taWRkbGUtZm9udCk7XHJcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBlYXNlLWluLW91dCwgYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2UtaW4tb3V0O1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbiAgYm9yZGVyOiBub25lO1xyXG5cclxuICAmLS1wcmltYXJ5e1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItYWNjZW50KTtcclxuICAgIGNvbG9yOiB2YXIoLS1jb2xvci13aGl0ZSk7XHJcbiAgICAmOmFjdGl2ZXtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItYnRuLWFjdGl2ZSk7XHJcbiAgICB9XHJcbiAgICBAaW5jbHVkZSBkZXNrdG9we1xyXG4gIFxyXG4gICAgICAmOmhvdmVye1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLWFjY2VudC1ob3Zlcik7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gIH1cclxuXHJcbiAgJi0tc2Vjb25kYXJ5e1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKCAgLS1jb2xvci1tYWluKTtcclxuICAgIGNvbG9yOiB2YXIoLS1jb2xvci13aGl0ZSk7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDIycHggMDtcclxuICAgIG1hcmdpbi1ib3R0b206IHZhcigtLWJvdHRvbS1vZnNldCk7XHJcbiAgICAmOmFjdGl2ZXtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItYnRuLWFjdGl2ZSk7XHJcbiAgICB9XHJcbiAgICBAaW5jbHVkZSBkZXNrdG9we1xyXG4gICAgICAmOmhvdmVye1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLW1haW4taG92ZXIpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgXHJcbiAgfVxyXG5cclxuICAmLS10aGlyZHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNvbG9yLW1haW4pO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBmb250OiB2YXIoLS10aXRsZS1ib29rKTtcclxuICAgIHBhZGRpbmc6IDE3cHggdmFyKC0tbWFpbi1vZnNldCk7XHJcbiAgICAmOmFjdGl2ZXtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItYnRuLWFjdGl2ZSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIEBpbmNsdWRlIGRlc2t0b3B7XHJcbiAgICAmOmhvdmVye1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1tYWluKTtcclxuICAgICAgY29sb3I6IHZhcigtLWNvbG9yLXdoaXRlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcbi5idG4tLXByaW1hcnkuZm9jdXMtdmlzaWJsZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItbWFpbik7XHJcbn1cclxuLmJ0bi0tc2Vjb25kYXJ5LmZvY3VzLXZpc2libGUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLW1haW4taG92ZXIpO1xyXG5cclxufVxyXG4uYnRuLS10aGlyZC5mb2N1cy12aXNpYmxlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1tYWluKTtcclxuICAgICAgY29sb3I6IHZhcigtLWNvbG9yLXdoaXRlKTtcclxuICAgICBcclxufVxyXG4udGl0bGV7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIG1hcmdpbi1ib3R0b206IHZhcigtLW1haW4tb2ZzZXQpO1xyXG4gIGZvbnQ6IHZhcigtLW1pZGRsZS1oaWdoKTtcclxuICBjb2xvcjogdmFyKC0tY29sb3ItbWFpbik7XHJcbn1cclxuLy8gLmN1c3RvbS1jaGVja2JveHtcclxuLy8gICBAaW5jbHVkZSBjdXN0b20tY2hlY2tib3g7XHJcblxyXG4vLyAgICZfX2NvbnRlbnR7XHJcbi8vICAgICBmb250OiB2YXIoLS10aXRsZS1ib29rKTtcclxuLy8gICAgIGNvbG9yOnZhcigtLWNvbG9yLW1haW4pO1xyXG4vLyAgICAgcGFkZGluZy1sZWZ0OiAzNXB4O1xyXG4vLyAgICAgJjo6YmVmb3Jle1xyXG4vLyAgICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1jb2xvci1DYW1lbyk7XHJcbi8vICAgICAgIHdpZHRoOiAyM3B4O1xyXG4vLyAgICAgICBoZWlnaHQ6IDIzcHg7XHJcbi8vICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbi8vICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuLy8gICAgIH1cclxuLy8gICAgICY6OmFmdGVye1xyXG4vLyAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvY2hlY2suc3ZnXCIpO1xyXG4vLyAgICAgICB3aWR0aDogMjNweDtcclxuLy8gICAgICAgaGVpZ2h0OiAyM3B4O1xyXG4vLyAgICAgICBiYWNrZ3JvdW5kLXNpemU6IDE1cHggMTJweDtcclxuLy8gICAgIH1cclxuICBcclxuLy8gICB9XHJcbi8vIH1cclxuLnZpc3VhbGx5LWhpZGRlbntcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6IDFweDtcclxuICBoZWlnaHQ6IDFweDtcclxuICBtYXJnaW46IC0xcHg7XHJcbiAgcGFkZGluZzogMDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGJvcmRlcjogMDtcclxuICBjbGlwOiByZWN0KDAgMCAwIDApO1xyXG59XHJcbnB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcblxyXG4vL3Rvb2x0aXBcclxuLnRvb2x0aXB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAmX19idG57XHJcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB3aWR0aDogMjBweDtcclxuICBoZWlnaHQ6IDIwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcclxuICBib3gtc2hhZG93OiAycHggNHB4IDEwcHggcmdiYSgwLCAxMywgODQsIDAuMik7XHJcbiAgbWFyZ2luLWxlZnQ6IHZhcigtLWJvdHRvbS1vZnNldCk7XHJcbiAgc3Zne1xyXG4gICAgd2lkdGg6IDdweDtcclxuICAgIGhlaWdodDogMTBweDtcclxuICB9XHJcbiAgICAgIH1cclxuICBcclxuXHJcbiAgJl9fdHh0e1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogLTEwcHg7XHJcbiAgICBib3R0b206IGNhbGMoMTAwJSArIDE1cHgpO1xyXG4gICAgei1pbmRleDogMTU7XHJcbiAgICBwYWRkaW5nOiB2YXIoLS1zbWFsbC1vZnNldCkgdmFyKC0tYm90dG9tLW9mc2V0KTtcclxuICAgIHdpZHRoOiBtYXgtY29udGVudDtcclxuICAgIG1heC13aWR0aDogNDI2cHg7O1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICAgIHRyYW5zZm9ybTogcm90YXRlWSgxMHB4KTtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlLWluLW91dCwgdHJhbnNmb3JtIDAuM3MgZWFzZS1pbi1vdXQsIHZpc2liaWxpdHkgMC4zcyBlYXNlLWluLW91dDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLXdoaXRlKTtcclxuICAgIGZvbnQ6IHZhcigtLXNtYWxsLWZvbnQpO1xyXG4gICAgY29sb3I6IHZhcigtLWNvbG9yLW1haW4pO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06aW5pdGlhbDtcclxuICAgIGJveC1zaGFkb3c6IDRweCA4cHggMjBweCByZ2JhKDAsIDEzLCA4NCwgMC4yKTtcclxuXHJcbiAgICAmOjphZnRlcntcclxuICAgICAgY29udGVudDogJyc7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgbGVmdDogMTBweDtcclxuICAgICAgYm90dG9tOiAtOHB4O1xyXG4gICAgICB3aWR0aDogMDtcclxuICAgICAgaGVpZ2h0OiAwO1xyXG4gICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgICBib3JkZXItd2lkdGg6IDhweCA4LjVweCAwIDguNXB4O1xyXG4gICAgICBib3JkZXItY29sb3I6IHZhcigtLWNvbG9yLXdoaXRlKSB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4udG9vbHRpcF9fYnRuOmhvdmVyICsgLnRvb2x0aXBfX3R4dHtcclxuICBvcGFjaXR5OiAxO1xyXG4gIHZpc2liaWxpdHk6IHZpc2libGU7XHJcbiAgdHJhbnNmb3JtOiByb3RhdGVZKDEwcHgpO1xyXG59XHJcblxyXG4udG9vbHRpcF9fYnRuOmZvY3VzICsgLnRvb2x0aXBfX3R4dHtcclxuICAgb3BhY2l0eTogMTtcclxuICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcclxuICAgdHJhbnNmb3JtOiByb3RhdGVZKDEwcHgpO1xyXG59XHJcbi5pbnB1dHtcclxuYm9yZGVyOiBub25lO1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci13aGl0ZSk7XHJcbndpZHRoOiAxMDAlO1xyXG5oZWlnaHQ6IDYwcHg7XHJcbmJvcmRlci1yYWRpdXM6IDRweDtcclxucGFkZGluZzogdmFyKC0tYm90dG9tLW9mc2V0KTtcclxuY29sb3I6IHZhcigtLWNvbG9yLW1haW4pO1xyXG5mb250OiB2YXIoLS1taWRkbGUtZm9udCk7XHJcbiY6OnBsYWNlaG9sZGVye1xyXG4gIGNvbG9yOiB2YXIoLS1jb2xvci1ncmV5KTtcclxuICBmb250OiB2YXIoLS1taWRkbGUtZm9udCk7XHJcbn1cclxufVxyXG4uaW5zdGFfX2lucHV0LXdycGFwcGVye1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3aWR0aDogMTAwJTtcclxuICAuanMtdmFsaWRhdGUtZXJyb3ItbGFiZWx7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gfVxyXG59XHJcbi5jYXJ0LW1vZGFsLW9yZGVyIC5qcy12YWxpZGF0ZS1lcnJvci1sYWJlbHtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcbiIsImh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4qLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xufVxuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xuICBmb250LWZhbWlseTogXCJhc2RcIiwgc2Fucy1zZXJpZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3Itd2hpdGUpO1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5saXN0LS1yZXNldCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuLmlzLW91dGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlICFpbXBvcnRhbnQ7XG4gIGxlZnQ6IC05OTk5cHggIWltcG9ydGFudDtcbn1cblxuLnNpdGUtY29udGFpbmVyIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmlzLWhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLmZvci1tb2JpbGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIC5mb3ItbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuXG4uZXJyb3Ige1xuICBib3JkZXI6IDJweCAjZmY0MDE5IHNvbGlkICFpbXBvcnRhbnQ7XG59XG5cbi5idG4tcmVzZXQge1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmc6IDA7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbi5jb250YWluZXIge1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMCAxNXB4O1xuICBtYXgtd2lkdGg6IDEyMTBweDtcbn1cblxuLmdyaWQge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMiwgMWZyKTtcbiAgZ2FwOiB2YXIoLS1ncmlkLWdhcCk7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcbiAgLmdyaWQge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gIH1cbn1cblxuLmJ0biB7XG4gIHBhZGRpbmc6IDIycHggNDdweDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBmb250OiB2YXIoLS1taWRkbGUtZm9udCk7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuM3MgZWFzZS1pbi1vdXQsIGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlLWluLW91dDtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xufVxuLmJ0bi0tcHJpbWFyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLWFjY2VudCk7XG4gIGNvbG9yOiB2YXIoLS1jb2xvci13aGl0ZSk7XG59XG4uYnRuLS1wcmltYXJ5OmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLWJ0bi1hY3RpdmUpO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjVweCkge1xuICAuYnRuLS1wcmltYXJ5OmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1hY2NlbnQtaG92ZXIpO1xuICB9XG59XG4uYnRuLS1zZWNvbmRhcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1tYWluKTtcbiAgY29sb3I6IHZhcigtLWNvbG9yLXdoaXRlKTtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDIycHggMDtcbiAgbWFyZ2luLWJvdHRvbTogdmFyKC0tYm90dG9tLW9mc2V0KTtcbn1cbi5idG4tLXNlY29uZGFyeTphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1idG4tYWN0aXZlKTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgLmJ0bi0tc2Vjb25kYXJ5OmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1tYWluLWhvdmVyKTtcbiAgfVxufVxuLmJ0bi0tdGhpcmQge1xuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1jb2xvci1tYWluKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgZm9udDogdmFyKC0tdGl0bGUtYm9vayk7XG4gIHBhZGRpbmc6IDE3cHggdmFyKC0tbWFpbi1vZnNldCk7XG59XG4uYnRuLS10aGlyZDphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1idG4tYWN0aXZlKTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgLmJ0bjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItbWFpbik7XG4gICAgY29sb3I6IHZhcigtLWNvbG9yLXdoaXRlKTtcbiAgfVxufVxuXG4uYnRuLS1wcmltYXJ5LmZvY3VzLXZpc2libGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1tYWluKTtcbn1cblxuLmJ0bi0tc2Vjb25kYXJ5LmZvY3VzLXZpc2libGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1tYWluLWhvdmVyKTtcbn1cblxuLmJ0bi0tdGhpcmQuZm9jdXMtdmlzaWJsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLW1haW4pO1xuICBjb2xvcjogdmFyKC0tY29sb3Itd2hpdGUpO1xufVxuXG4udGl0bGUge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IHZhcigtLW1haW4tb2ZzZXQpO1xuICBmb250OiB2YXIoLS1taWRkbGUtaGlnaCk7XG4gIGNvbG9yOiB2YXIoLS1jb2xvci1tYWluKTtcbn1cblxuLnZpc3VhbGx5LWhpZGRlbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYm9yZGVyOiAwO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xufVxuXG5wIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4udG9vbHRpcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi50b29sdGlwX19idG4ge1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIGJveC1zaGFkb3c6IDJweCA0cHggMTBweCByZ2JhKDAsIDEzLCA4NCwgMC4yKTtcbiAgbWFyZ2luLWxlZnQ6IHZhcigtLWJvdHRvbS1vZnNldCk7XG59XG4udG9vbHRpcF9fYnRuIHN2ZyB7XG4gIHdpZHRoOiA3cHg7XG4gIGhlaWdodDogMTBweDtcbn1cbi50b29sdGlwX190eHQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC0xMHB4O1xuICBib3R0b206IGNhbGMoMTAwJSArIDE1cHgpO1xuICB6LWluZGV4OiAxNTtcbiAgcGFkZGluZzogdmFyKC0tc21hbGwtb2ZzZXQpIHZhcigtLWJvdHRvbS1vZnNldCk7XG4gIHdpZHRoOiBtYXgtY29udGVudDtcbiAgbWF4LXdpZHRoOiA0MjZweDtcbiAgb3BhY2l0eTogMDtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICB0cmFuc2Zvcm06IHJvdGF0ZVkoMTBweCk7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlLWluLW91dCwgdHJhbnNmb3JtIDAuM3MgZWFzZS1pbi1vdXQsIHZpc2liaWxpdHkgMC4zcyBlYXNlLWluLW91dDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3Itd2hpdGUpO1xuICBmb250OiB2YXIoLS1zbWFsbC1mb250KTtcbiAgY29sb3I6IHZhcigtLWNvbG9yLW1haW4pO1xuICB0ZXh0LXRyYW5zZm9ybTogaW5pdGlhbDtcbiAgYm94LXNoYWRvdzogNHB4IDhweCAyMHB4IHJnYmEoMCwgMTMsIDg0LCAwLjIpO1xufVxuLnRvb2x0aXBfX3R4dDo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDEwcHg7XG4gIGJvdHRvbTogLThweDtcbiAgd2lkdGg6IDA7XG4gIGhlaWdodDogMDtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXdpZHRoOiA4cHggOC41cHggMCA4LjVweDtcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1jb2xvci13aGl0ZSkgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbn1cblxuLnRvb2x0aXBfX2J0bjpob3ZlciArIC50b29sdGlwX190eHQge1xuICBvcGFjaXR5OiAxO1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICB0cmFuc2Zvcm06IHJvdGF0ZVkoMTBweCk7XG59XG5cbi50b29sdGlwX19idG46Zm9jdXMgKyAudG9vbHRpcF9fdHh0IHtcbiAgb3BhY2l0eTogMTtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgdHJhbnNmb3JtOiByb3RhdGVZKDEwcHgpO1xufVxuXG4uaW5wdXQge1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbG9yLXdoaXRlKTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNjBweDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBwYWRkaW5nOiB2YXIoLS1ib3R0b20tb2ZzZXQpO1xuICBjb2xvcjogdmFyKC0tY29sb3ItbWFpbik7XG4gIGZvbnQ6IHZhcigtLW1pZGRsZS1mb250KTtcbn1cbi5pbnB1dDo6cGxhY2Vob2xkZXIge1xuICBjb2xvcjogdmFyKC0tY29sb3ItZ3JleSk7XG4gIGZvbnQ6IHZhcigtLW1pZGRsZS1mb250KTtcbn1cblxuLmluc3RhX19pbnB1dC13cnBhcHBlciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmluc3RhX19pbnB1dC13cnBhcHBlciAuanMtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uY2FydC1tb2RhbC1vcmRlciAuanMtdmFsaWRhdGUtZXJyb3ItbGFiZWwge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG46cm9vdCB7XG4gIC0tY29sb3ItYmxhY2s6ICMwMDA7XG4gIC0tY29sb3Itd2hpdGU6ICNmZmY7XG4gIC0tY29sb3ItbWFpbjogIzQ0NEI1ODtcbiAgLS1jb2xvci1tYWluLWhvdmVyOiMzMTM0M0M7XG4gIC0tY29sb3ItRWFzdEJheTojNDg0MjgzO1xuICAtLWNvbG9yLUNhbWVvOiNEQkJCQTk7XG4gIC0tY29sb3ItZ3JleTojQjJCNUJCO1xuICAtLWNvbG9yLURhcmtncmV5OiM4MDgwODA7XG4gIC0tY29sb3ItYWNjZW50OiNGMTRGNEY7XG4gIC0tY29sb3ItYWNjZW50LWhvdmVyOiNDQzQ5NDk7XG4gIC0tY29sb3ItYm9yZGVyOnJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcbiAgLS1jb2xvci1iZzojRkZGNEVFO1xuICAtLWNvbG9yLWJ0bi1hY3RpdmU6IzhDMjgyODtcbiAgLS1ncmlkLWdhcDoyMHB4O1xuICAtLXNtYWxsLW9mc2V0OjEwcHg7XG4gIC0tbWFpbi1vZnNldDo0MHB4O1xuICAtLWJvdHRvbS1vZnNldDoyMHB4O1xuICAtLWJpZy1vZnNldDo2MHB4O1xuICAtLWZvbnQtZmFtaWx5OlwiSW50cm9cIiwgc2Fucy1zZXJpZjtcbiAgLS1taWRkbGUtaGlnaDogNzAwIDMwcHggLyAxNDAlIHZhcigtLWZvbnQtZmFtaWx5KTtcbiAgLS1oMy1ib29rOiA0MDAgMjRweCAvIDI0cHggdmFyKC0tZm9udC1mYW1pbHkpO1xuICAtLXRpdGxlLWJvb2s6IDQwMCAxNnB4IC8gMTZweCB2YXIoLS1mb250LWZhbWlseSk7XG4gIC0tbWlkZGxlLWZvbnQ6IDQwMCAxNnB4IC8gMTQwJSB2YXIoLS1mb250LWZhbWlseSk7XG4gIC0tc21hbGwtZm9udDogNDAwIDE0cHggLyAxNDAlIHZhcigtLWZvbnQtZmFtaWx5KTtcbiAgLS10ZXh0LWZvbnQ6IDQwMCAxNnB4IC8gMjIuNHB4IHZhcigtLWZvbnQtZmFtaWx5KTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XG4gIDpyb290IHtcbiAgICAtLWdyaWQtZ2FwOjEwcHg7XG4gICAgLS1zbWFsbC1vZnNldDo4cHg7XG4gICAgLS1tYWluLW9mc2V0OjIwcHg7XG4gICAgLS1ib3R0b20tb2ZzZXQ6MTBweDtcbiAgICAtLWJpZy1vZnNldDozMHB4O1xuICB9XG59IiwiQG1peGluIGRlc2t0b3Age1xyXG4gIEBtZWRpYSAobWluLXdpZHRoOiAoMTAyNXB4KSkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gdGFibGV0IHtcclxuICBAbWVkaWEgKG1heC13aWR0aDogKDEwMjRweCkpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuXHJcbkBtaXhpbiBzbWFsbC10YWJsZXQge1xyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAoNzY4cHgpKSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBtb2JpbGUge1xyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiAoNTc2cHgpKSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuIiwiXHJcbkBpbXBvcnQgXCJfbWl4aW5zLnNjc3NcIjtcclxuOnJvb3Qge1xyXG4gIC8vY29sb3JzXHJcbiAgLS1jb2xvci1ibGFjazogIzAwMDtcclxuICAtLWNvbG9yLXdoaXRlOiAjZmZmO1xyXG4gIC0tY29sb3ItbWFpbjogIzQ0NEI1ODtcclxuICAtLWNvbG9yLW1haW4taG92ZXI6IzMxMzQzQztcclxuICAtLWNvbG9yLUVhc3RCYXk6IzQ4NDI4MztcclxuICAtLWNvbG9yLUNhbWVvOiNEQkJCQTk7XHJcbiAgLS1jb2xvci1ncmV5OiNCMkI1QkI7XHJcbiAgLS1jb2xvci1EYXJrZ3JleTojODA4MDgwO1xyXG4gIC0tY29sb3ItYWNjZW50OiNGMTRGNEY7XHJcbiAgLS1jb2xvci1hY2NlbnQtaG92ZXI6I0NDNDk0OTtcclxuICAtLWNvbG9yLWJvcmRlcjpyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XHJcbiAgLS1jb2xvci1iZzojRkZGNEVFO1xyXG4gIC0tY29sb3ItYnRuLWFjdGl2ZTojOEMyODI4O1xyXG4gIC8vb2ZzZXRzXHJcbiAgLS1ncmlkLWdhcDoyMHB4O1xyXG4gIC0tc21hbGwtb2ZzZXQ6MTBweDtcclxuICAtLW1haW4tb2ZzZXQ6NDBweDtcclxuICAtLWJvdHRvbS1vZnNldDoyMHB4O1xyXG4gIC0tYmlnLW9mc2V0OjYwcHg7XHJcbiAgXHJcbiAgLy9mb250c1xyXG4gIC0tZm9udC1mYW1pbHk6XCJJbnRyb1wiLCBzYW5zLXNlcmlmO1xyXG4gIC0tbWlkZGxlLWhpZ2g6IDcwMCAzMHB4IC8gMTQwJSB2YXIoLS1mb250LWZhbWlseSk7XHJcbiAgLS1oMy1ib29rOiA0MDAgMjRweCAvIDI0cHggdmFyKC0tZm9udC1mYW1pbHkpO1xyXG4gIC0tdGl0bGUtYm9vazogNDAwIDE2cHggLyAxNnB4IHZhcigtLWZvbnQtZmFtaWx5KTtcclxuICAtLW1pZGRsZS1mb250OiA0MDAgMTZweCAvIDE0MCUgdmFyKC0tZm9udC1mYW1pbHkpO1xyXG4gIC0tc21hbGwtZm9udDogNDAwIDE0cHggLyAxNDAlIHZhcigtLWZvbnQtZmFtaWx5KTtcclxuICAtLXRleHQtZm9udDogNDAwIDE2cHggLyAyMi40cHggdmFyKC0tZm9udC1mYW1pbHkpO1xyXG59XHJcbkBpbmNsdWRlIG1vYmlsZXtcclxuICA6cm9vdHtcclxuICAgIC0tZ3JpZC1nYXA6MTBweDtcclxuICAgIC0tc21hbGwtb2ZzZXQ6OHB4O1xyXG4gICAgLS1tYWluLW9mc2V0OjIwcHg7XHJcbiAgICAtLWJvdHRvbS1vZnNldDoxMHB4O1xyXG4gICAgLS1iaWctb2ZzZXQ6MzBweDtcclxuICB9XHJcbiB9Il19 */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
