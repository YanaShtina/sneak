html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

body {
  margin: 0;
  font-family: "asd", sans-serif;
  background-color: var(--color-white);
}

.disable-scroll {
  position: relative;
  overflow: hidden;
  height: 100vh;
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
}

img {
  max-width: 100%;
}

a {
  text-decoration: none;
}

.list--reset {
  list-style: none;
  padding: 0;
  margin: 0;
}

.is-outer {
  position: relative !important;
  left: -9999px !important;
}

.site-container {
  overflow: hidden;
}

.is-hidden {
  display: none !important;
}

.for-mobile {
  display: none;
}
@media (max-width: 576px) {
  .for-mobile {
    display: block;
  }
}

.error {
  border: 2px #ff4019 solid !important;
}

.btn-reset {
  border: none;
  background: transparent;
  cursor: pointer;
  padding: 0;
  outline: none;
}

.container {
  margin: 0 auto;
  padding: 0 15px;
  max-width: 1210px;
}

.grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: var(--grid-gap);
}
@media (max-width: 576px) {
  .grid {
    grid-template-columns: repeat(4, 1fr);
  }
}

.btn {
  padding: 22px 47px;
  border-radius: 4px;
  font: var(--middle-font);
  -webkit-transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;
  -o-transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;
  transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;
  outline: none;
  border: none;
}
.btn--primary {
  background-color: var(--color-accent);
  color: var(--color-white);
}
.btn--primary:active {
  background-color: var(--color-btn-active);
}
@media (min-width: 1025px) {
  .btn--primary:hover {
    background-color: var(--color-accent-hover);
  }
}
.btn--secondary {
  background-color: var(--color-main);
  color: var(--color-white);
  width: 100%;
  padding: 22px 0;
  margin-bottom: var(--bottom-ofset);
}
.btn--secondary:active {
  background-color: var(--color-btn-active);
}
@media (min-width: 1025px) {
  .btn--secondary:hover {
    background-color: var(--color-main-hover);
  }
}
.btn--third {
  border: 1px solid var(--color-main);
  background-color: transparent;
  border-radius: 4px;
  font: var(--title-book);
  padding: 17px var(--main-ofset);
}
.btn--third:active {
  background-color: var(--color-btn-active);
}
@media (min-width: 1025px) {
  .btn:hover {
    background-color: var(--color-main);
    color: var(--color-white);
  }
}

.btn--primary.focus-visible {
  background-color: var(--color-main);
}

.btn--secondary.focus-visible {
  background-color: var(--color-main-hover);
}

.btn--third.focus-visible {
  background-color: var(--color-main);
  color: var(--color-white);
}

.title {
  margin: 0;
  margin-bottom: var(--main-ofset);
  font: var(--middle-high);
  color: var(--color-main);
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  border: 0;
  clip: rect(0 0 0 0);
}

p {
  margin: 0;
  padding: 0;
}

.tooltip {
  position: relative;
}
.tooltip__btn {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: 20px;
  height: 20px;
  border-radius: 100%;
  -webkit-box-shadow: 2px 4px 10px rgba(0, 13, 84, 0.2);
          box-shadow: 2px 4px 10px rgba(0, 13, 84, 0.2);
  margin-left: var(--bottom-ofset);
}
.tooltip__btn svg {
  width: 7px;
  height: 10px;
}
.tooltip__txt {
  position: absolute;
  left: -10px;
  bottom: calc(100% + 15px);
  z-index: 15;
  padding: var(--small-ofset) var(--bottom-ofset);
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
  max-width: 426px;
  opacity: 0;
  visibility: hidden;
  -webkit-transform: rotateY(10px);
          transform: rotateY(10px);
  -webkit-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
  -o-transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out, visibility 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out, visibility 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out, visibility 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
  background-color: var(--color-white);
  font: var(--small-font);
  color: var(--color-main);
  text-transform: initial;
  -webkit-box-shadow: 4px 8px 20px rgba(0, 13, 84, 0.2);
          box-shadow: 4px 8px 20px rgba(0, 13, 84, 0.2);
}
.tooltip__txt::after {
  content: "";
  position: absolute;
  left: 10px;
  bottom: -8px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 8px 8.5px 0 8.5px;
  border-color: var(--color-white) transparent transparent transparent;
  border-radius: 4px;
}

.tooltip__btn:hover + .tooltip__txt {
  opacity: 1;
  visibility: visible;
  -webkit-transform: rotateY(10px);
          transform: rotateY(10px);
}

.tooltip__btn:focus + .tooltip__txt {
  opacity: 1;
  visibility: visible;
  -webkit-transform: rotateY(10px);
          transform: rotateY(10px);
}

.input {
  border: none;
  background-color: var(--color-white);
  width: 100%;
  height: 60px;
  border-radius: 4px;
  padding: var(--bottom-ofset);
  color: var(--color-main);
  font: var(--middle-font);
}
.input::-webkit-input-placeholder {
  color: var(--color-grey);
  font: var(--middle-font);
}
.input::-moz-placeholder {
  color: var(--color-grey);
  font: var(--middle-font);
}
.input:-ms-input-placeholder {
  color: var(--color-grey);
  font: var(--middle-font);
}
.input::-ms-input-placeholder {
  color: var(--color-grey);
  font: var(--middle-font);
}
.input::placeholder {
  color: var(--color-grey);
  font: var(--middle-font);
}

.insta__input-wrpapper {
  display: block;
  position: relative;
  width: 100%;
}
.insta__input-wrpapper .js-validate-error-label {
  margin-bottom: 10px;
}

.cart-modal-order .js-validate-error-label {
  margin-bottom: 10px;
}

.about {
  position: relative;
  background-color: var(--color-EastBay);
}
.about__figure {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10;
}
.about__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  height: 100%;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}
@media (max-width: 768px) {
  .about__container {
    padding-top: 15px;
  }
}
.about__text {
  position: relative;
  z-index: 55;
  width: 40%;
  color: var(--color-white);
  margin: 0;
}
@media (max-width: 768px) {
  .about__text {
    width: 100%;
  }
}
.about__title {
  margin: 0;
  margin-bottom: var(--bottom-ofset);
  font: var(--middle-high);
  width: 37%;
}
@media (max-width: 1024px) {
  .about__title {
    width: 100%;
  }
}
.about__desc {
  font: var(--text-font);
  margin-bottom: var(--bottom-ofset);
}
.about__quote {
  display: block;
  margin-bottom: var(--bottom-ofset);
  font: inherit;
}
.about__quote::before, .about__quote::after {
  display: none;
}
.about__author {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  font: var(--h3-book);
  font-style: normal;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-transform: translateX(5%);
      -ms-transform: translateX(5%);
          transform: translateX(5%);
}
.about__author::before {
  content: "";
  display: inline-block;
  background-color: var(--color-white);
  width: 30px;
  height: 3px;
  margin-right: var(--bottom-ofset);
}
@media (max-width: 768px) {
  .about__author {
    -webkit-transform: none;
        -ms-transform: none;
            transform: none;
  }
}
.about__img {
  -ms-flex-negative: 0;
      flex-shrink: 0;
  position: relative;
  width: 680px;
  height: 580px;
}
@media (max-width: 1024px) {
  .about__img {
    width: 580px;
  }
}
@media (max-width: 768px) {
  .about__img {
    display: none;
  }
}
.about__img img {
  width: 100%;
  height: 100%;
}
.about__img::before {
  z-index: 5;
  content: "";
  position: absolute;
  width: 600px;
  height: 100%;
  -webkit-transform: skew(345deg) translateX(-84%);
      -ms-transform: skew(345deg) translateX(-84%);
          transform: skew(345deg) translateX(-84%);
  background-color: var(--color-EastBay);
}
.about__img::after {
  z-index: 5;
  content: "";
  position: absolute;
  width: 600px;
  height: 100%;
  -webkit-transform: skew(346deg) translate(-13%, 0%);
      -ms-transform: skew(346deg) translate(-13%, 0%);
          transform: skew(346deg) translate(-13%, 0%);
  background-color: var(--color-EastBay);
}

.cart-modal {
  width: 580px;
  border-radius: 4px;
  padding: var(--main-ofset);
}
.cart-modal__top {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin-bottom: var(--main-ofset);
}
@media (max-width: 768px) {
  .cart-modal__top {
    margin-bottom: var(--bottom-ofset);
  }
}
@media (max-width: 576px) {
  .cart-modal__top {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
  }
}
.cart-modal__title {
  margin: 0;
  font: 700 20px/20px "Intro";
}
@media (max-width: 576px) {
  .cart-modal__title {
    margin-bottom: 10px;
  }
}
.cart-modal__ordernum {
  font: var(--small-font);
  color: var(--color-grey);
}
.cart-modal__input {
  background-color: #F6F6F6;
  color: var(--color-grey);
}
.cart-modal__input:not(:last-child) {
  margin-bottom: var(--small-ofset);
}
@media (max-width: 768px) {
  .cart-modal {
    padding: var(--bottom-ofset);
    max-width: 600px;
    width: 100%;
  }
}

.cart-modal-order__inner {
  border: 1px solid #D9D9D9;
  border-radius: 4px;
  padding: 30px;
  margin-bottom: var(--main-ofset);
}
@media (max-width: 576px) {
  .cart-modal-order__inner {
    padding: var(--small-ofset);
  }
}
.cart-modal-order__item:not(:last-child) {
  margin-bottom: var(--bottom-ofset);
}
.cart-modal-order__top {
  font: var(--title-book);
  color: var(--color-grey);
  margin-bottom: var(--bottom-ofset);
}
.cart-modal-order__top span {
  font-weight: 700;
  color: var(--color-main);
}
.cart-modal-order__top p:not(:last-child) {
  margin-bottom: var(--bottom-ofset);
}
.cart-modal-order__btn {
  font: var(--title-book);
  margin-bottom: 10px;
}
.cart-modal-order__btn svg {
  width: 7px;
  height: 7px;
  color: currentColor;
  margin-right: 5px;
  -o-object-fit: cover;
     object-fit: cover;
  -webkit-transition: -webkit-transform 0.3s ease-in-out;
  transition: -webkit-transform 0.3s ease-in-out;
  -o-transition: transform 0.3s ease-in-out;
  transition: transform 0.3s ease-in-out;
  transition: transform 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
}
.cart-modal-order__btn--open svg {
  -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
          transform: rotate(180deg);
}
@media (max-width: 576px) {
  .cart-modal-order__btn {
    width: 100%;
  }
}
@media (max-width: 576px) {
  .cart-modal-order__btn--show {
    text-align: left;
  }
}
.cart-modal-order__list {
  display: none;
}
.cart-modal-order__list--open {
  display: block;
}

.cart-modal {
  padding-top: var(--small-ofset);
}
.cart-modal .mini-product {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: var(--small-ofset) 0;
}
@media (max-width: 576px) {
  .cart-modal .mini-product {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
    margin-bottom: var(--small-ofset);
  }
}
.cart-modal .mini-product__img {
  width: 80px;
  height: 45px;
  -ms-flex-negative: 0;
      flex-shrink: 0;
  margin-right: var(--small-ofset);
}
.cart-modal .mini-product__img img {
  width: 100%;
  height: 100%;
  display: block;
  -o-object-fit: cover;
     object-fit: cover;
}
@media (max-width: 576px) {
  .cart-modal .mini-product__img {
    width: 120px;
    height: 70px;
  }
}
.cart-modal .mini-product__text {
  width: 290px;
  margin-right: auto;
}
.cart-modal .mini-product__title {
  margin: 0;
  margin-bottom: var(--small-ofset);
  font: var(--small-font);
  line-height: 20px;
}
@media (max-width: 576px) {
  .cart-modal .mini-product__title {
    margin-bottom: 0;
  }
}
.cart-modal .mini-product__price {
  font: 700 20px/20px "Intro";
  color: #4D4D4D;
}
@media (max-width: 576px) {
  .cart-modal .mini-product__price {
    font-size: 16px;
  }
}
.cart-modal .mini-product__content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
@media (max-width: 576px) {
  .cart-modal .mini-product__content {
    width: 100%;
  }
}
.cart-modal .mini-product__delete {
  font: var(--title-book);
  color: var(--color-grey);
  margin-right: 7px;
}

.cart {
  position: relative;
  margin-left: var(--main-ofset);
}
.cart__btn {
  width: 20px;
  height: 20px;
  position: relative;
  fill: var(--color-white);
}
.cart__btn svg {
  display: block;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  pointer-events: none;
}
.cart__btn:focus svg {
  fill: var(--color-accent);
}
.cart__btn:active svg {
  fill: var(--color-accent);
}
@media (min-width: 1025px) {
  .cart__btn:hover svg {
    fill: var(--color-accent);
  }
}
.cart__counter {
  background-color: var(--color-accent);
  position: absolute;
  right: -6px;
  bottom: -6px;
  font-size: var(--small);
  color: var(--color-white);
  height: 16px;
  min-width: 16px;
  border-radius: 100%;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  pointer-events: none;
  opacity: 0;
  -webkit-transition: opacity 0.3s ease-in-out;
  -o-transition: opacity 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out;
}
.cart__counter--visible {
  opacity: 1;
  -webkit-transition: opacity 0.3s ease-in-out;
  -o-transition: opacity 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out;
}

.mini-cart {
  position: absolute;
  top: calc(100% + 18px);
  right: 0;
  background-color: var(--color-white);
  -webkit-box-shadow: 0 -4px 10px rgba(0, 13, 84, 0.1);
          box-shadow: 0 -4px 10px rgba(0, 13, 84, 0.1);
  width: 480px;
  -webkit-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
  -o-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
  opacity: 0;
  visibility: hidden;
}
.mini-cart--opened {
  opacity: 1;
  visibility: visible;
}
.mini-cart__top {
  max-height: 300px;
}
.mini-cart__bottom {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  padding: var(--bottom-ofset);
  -webkit-box-shadow: 0px -4px 10px rgba(0, 13, 84, 0.1);
          box-shadow: 0px -4px 10px rgba(0, 13, 84, 0.1);
}
@media (max-width: 576px) {
  .mini-cart__bottom {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}
@media (max-width: 576px) {
  .mini-cart__total {
    -ms-flex-item-align: start;
        align-self: flex-start;
    margin-bottom: var(--bottom-ofset);
  }
}
.mini-cart__txt {
  font: var(--small-font);
  margin-bottom: var(--small-ofset);
  color: #4D4D4D;
}
.mini-cart__sum {
  font: 700 20px/20px "Intro";
  color: #4D4D4D;
}
@media (max-width: 576px) {
  .mini-cart__sum {
    font-size: 16px;
  }
}
.mini-cart__btn {
  padding-top: 15px;
  padding-bottom: 15px;
}
@media (max-width: 576px) {
  .mini-cart__btn {
    width: 100%;
  }
}
.mini-cart .simplebar-track.simplebar-vertical {
  background: rgba(77, 77, 77, 0.1);
  border-radius: 5px;
  right: 5px;
  top: 20px;
  bottom: 20px;
  width: 4px;
}
.mini-cart .simplebar-track.simplebar-vertical .simplebar-scrollbar:before {
  background: rgba(77, 77, 77, 0.2);
  border-radius: 5px;
  width: 4px;
  opacity: 1;
  right: auto;
  left: 0;
  top: 0;
  bottom: 0;
}
@media (max-width: 576px) {
  .mini-cart {
    width: calc(100vw - 30px);
  }
}

.custom-checkbox {
  position: relative;
}
.custom-checkbox__field {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  position: absolute;
}
.custom-checkbox__content {
  padding-left: 25px;
  cursor: pointer;
}
.custom-checkbox__content::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  border: 1px solid var(--color-Cameo);
  width: 18px;
  height: 18px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  border-radius: 4px;
}
@media (max-width: 576px) {
  .custom-checkbox__content::before {
    width: 17px;
    height: 17px;
  }
}
.custom-checkbox__content::after {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 18px;
  height: 18px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  background-image: url("data:image/svg+xml,%3Csvg version='1.1' id='fi_32282' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='405.272px' height='405.272px' viewBox='0 0 405.272 405.272' style='enable-background:new 0 0 405.272 405.272;' xml:space='preserve'%3E%3Cg%3E%3Cpath d='M393.401,124.425L179.603,338.208c-15.832,15.835-41.514,15.835-57.361,0L11.878,227.836 c-15.838-15.835-15.838-41.52,0-57.358c15.841-15.841,41.521-15.841,57.355-0.006l81.698,81.699L336.037,67.064 c15.841-15.841,41.523-15.829,57.358,0C409.23,82.902,409.23,108.578,393.401,124.425z'%3E%3C/path%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3Cg%3E%3C/g%3E%3C/svg%3E");
  background-position: center;
  background-size: 10px 10px;
  background-repeat: no-repeat;
  opacity: 0;
  -webkit-transition: opacity 0.3s ease-in-out;
  -o-transition: opacity 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out;
}

.custom-checkbox__field:checked + .custom-checkbox__content::after {
  opacity: 1;
}

.custom-checkbox__field:focus + .custom-checkbox__content::before {
  outline: 3px solid var(--color-Cameo);
}

.custom-checkbox__field:disabled + .custom-checkbox__content {
  opacity: 0.4;
  pointer-events: none;
}

.catalog {
  margin: var(--big-ofset);
}
.catalog__left {
  grid-column: 3 span;
}
@media (max-width: 1024px) {
  .catalog__left {
    display: none;
  }
}
.catalog__filters {
  background-color: var(--color-bg);
  border-radius: 4px;
  padding: var(--bottom-ofset);
}
.catalog__subtitle {
  margin: 0;
  font: var(--h3-book);
  color: var(--color-main);
  margin-bottom: var(--bottom-ofset);
}
.catalog__caption {
  font: var(--title-book);
  color: var(--color-main);
  margin-bottom: var(--small-ofset);
}
.catalog__prop {
  margin-bottom: var(--bottom-ofset);
}
.catalog__prop-check {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}
.catalog__grid {
  grid-column: 9 span;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
@media (max-width: 1024px) {
  .catalog__grid {
    grid-column: 12 span;
  }
}
.catalog__more {
  margin-top: var(--main-ofset);
}
@media (max-width: 576px) {
  .catalog__more {
    width: 100%;
  }
}
@media (min-width: 1025px) {
  .catalog__reset:hover {
    color: var(--color-btn-active);
  }
}
.catalog__reset:focus {
  color: var(--color-btn-active);
}
.catalog__reset:active {
  color: var(--color-btn-active);
}

.catalog-list {
  grid-template-columns: repeat(9, 1fr);
}
.catalog-list__item {
  grid-column: 3 span;
}
@media (max-width: 576px) {
  .catalog-list__item {
    grid-column: 4 span;
  }
}
@media (max-width: 768px) {
  .catalog-list {
    grid-template-columns: repeat(3, 1fr);
  }
}
@media (max-width: 576px) {
  .catalog-list {
    grid-template-columns: repeat(4, 1fr);
  }
}

.catalog-price__wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  position: relative;
}
.catalog-price__wrapper::before {
  content: "";
  position: absolute;
  left: 50%;
  top: 8px;
  bottom: 8px;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
  width: 1px;
  height: 34px;
  background-color: var(--color-grey);
}
.catalog-price__input {
  width: 50%;
  height: 50px;
  border: 1px solid var(--color-grey);
  text-align: center;
  font: var(--title-book);
  background-color: transparent;
  color: var(--color-main);
}
.catalog-price__input:first-child {
  border-right: none;
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
}
.catalog-price__input:last-child {
  border-left: none;
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
}

.catalog-price__input:focus {
  outline: none;
  border: 3px solid var(--color-grey);
  border-radius: 4px;
}

.noUi-horizontal {
  height: 2px;
}

.noUi-target {
  background-color: var(--color-main);
  border-radius: 4px;
  border: none;
  -webkit-box-shadow: none;
          box-shadow: none;
}

.noUi-connect {
  background-color: var(--color-main);
}

.noUi-handle {
  border: none;
  border-radius: 100%;
  background: var(--color-main);
  cursor: pointer;
  -webkit-box-shadow: none;
          box-shadow: none;
}

.noUi-horizontal .noUi-handle {
  width: 3px;
  height: 18px;
}

.noUi-handle:before, .noUi-handle:after {
  display: none;
}

.noUi-horizontal .noUi-handle {
  right: -2px;
  top: -8px;
}

.sizes-table {
  border-collapse: collapse;
  width: 100%;
  color: var(--color-main);
  pointer-events: painted;
  text-align: center;
  font: var(--title-book);
}
.sizes-table caption {
  position: absolute;
  opacity: 0;
  pointer-events: none;
}
.sizes-table td {
  border: 1px solid var(--color-Cameo);
}

.catalog-filter__btns {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.catalog-checkbox {
  position: relative;
}

td input {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
}

td span {
  display: inline-block;
  width: 100%;
  height: 100%;
  padding: 10px 5px;
}
td span:hover {
  cursor: pointer;
}

.catalog-checkbox__table:checked ~ span {
  background-color: var(--color-Cameo);
}

.contacts {
  background-color: #F3F7F6;
  padding: var(--big-ofset);
}
@media (max-width: 576px) {
  .contacts {
    padding: var(--bottom-ofset);
  }
}
.contacts__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
@media (max-width: 1024px) {
  .contacts__container {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }
}
.contacts__text {
  margin-right: var(--bottom-ofset);
  width: calc(100% - (680px + var(--bottom-ofset)));
}
@media (max-width: 1024px) {
  .contacts__text {
    width: 50%;
    margin: 0 auto;
    margin-bottom: var(--bottom-ofset);
    text-align: center;
  }
}
@media (max-width: 576px) {
  .contacts__text {
    width: 100%;
  }
}
.contacts__item {
  font-style: normal;
  margin-bottom: var(--bottom-ofset);
  position: relative;
}
.contacts__subtitle {
  text-transform: uppercase;
  font: var(--small-font);
  color: var(--color-grey);
  margin: 0;
  margin-bottom: var(--main-ofset);
}
.contacts__phone {
  font: var(--middle-high);
  color: var(--color-main);
  display: block;
  margin-bottom: var(--bottom-ofset);
  outline: none;
}
@media (min-width: 1025px) {
  .contacts__phone:hover {
    color: var(--color-accent-hover);
  }
}
@media (max-width: 576px) {
  .contacts__phone {
    font-size: 28px;
  }
}
.contacts__phone:focus {
  color: var(--color-btn-active);
}
.contacts__phone:active {
  color: var(--color-btn-active);
  opacity: 0.7;
}
.contacts__address {
  font: 400 18px/140% "Intro";
  color: var(--color-grey);
}
.contacts__map {
  width: 680px;
  height: 500px;
}
@media (max-width: 1024px) {
  .contacts__map {
    width: 100%;
  }
}

@media (max-width: 1024px) {
  .contacts .tooltip__txt {
    width: 280px;
    top: calc(100% + 15px);
    bottom: auto;
    right: 100%;
    -webkit-transform: translateX(35%);
        -ms-transform: translateX(35%);
            transform: translateX(35%);
    left: auto;
  }
  .contacts .tooltip__txt::after {
    right: 25%;
    left: auto;
    top: -8px;
    -webkit-transform: rotate(180deg);
        -ms-transform: rotate(180deg);
            transform: rotate(180deg);
  }
}
.faq {
  padding: var(--big-ofset) 0;
}
.faq__list {
  max-width: 880px;
  margin: 0 auto;
}

.faq-accordion {
  border-top: 1px solid #242424;
  border-bottom: 1px solid #242424;
}
.faq-accordion:not(:first-child) {
  margin-top: -1px;
}
.faq-accordion__control {
  width: 100%;
  text-align: left;
  background-color: transparent;
  cursor: pointer;
  font: 400 20px/20px "Intro";
  color: #242424;
  padding: 30px 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
@media (max-width: 576px) {
  .faq-accordion__control {
    padding: var(--small-ofset);
  }
}
.faq-accordion__content {
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  padding-right: 70px;
  will-change: max-height;
  -webkit-transition: all 0.3s ease-out;
  -o-transition: all 0.3s ease-out;
  transition: all 0.3s ease-out;
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  color: rgba(36, 36, 36, 0.5);
}
.faq-accordion__content p:not(:last-child) {
  margin-bottom: 10px;
}
@media (max-width: 576px) {
  .faq-accordion__content {
    padding-right: 0px;
  }
}
.faq-accordion__icon {
  -webkit-transition: -webkit-transform 0.3s ease-out;
  transition: -webkit-transform 0.3s ease-out;
  -o-transition: transform 0.3s ease-out;
  transition: transform 0.3s ease-out;
  transition: transform 0.3s ease-out, -webkit-transform 0.3s ease-out;
  width: 25px;
  height: 25px;
  background-image: url("../img/cross.svg");
  display: inline-block;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

.open .faq-accordion__icon {
  -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
          transform: rotate(45deg);
}

.open .faq-accordion__content {
  opacity: 1;
  padding-bottom: 18px;
}

.footer {
  background-color: var(--color-main);
  padding: 30px 0;
}
.footer__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
@media (max-width: 1024px) {
  .footer__container {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}
@media (max-width: 1024px) {
  .footer__left {
    margin-bottom: var(--small-ofset);
  }
}

.footer .nav__list {
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.footer .nav__item {
  margin-bottom: var(--bottom-ofset);
}

.nav__list {
  list-style: none;
}

.header {
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  z-index: 100;
  background-color: var(--color-EastBay);
}
.header__container {
  --padding:15px;
  position: relative;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 10px var(--padding);
}
.header__container::before {
  content: "";
  position: absolute;
  left: 50%;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
  bottom: 0;
  width: calc(100% - var(--padding) * 2);
  height: 1px;
  background-color: var(--color-border);
}
.header__left {
  grid-column: 2 span;
}
.header__right {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  grid-column: 10 span;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
@media (max-width: 576px) {
  .header__right {
    grid-column: 2 span;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}

.hero {
  padding: 50px 0;
  height: 528px;
  background-color: var(--color-EastBay);
  position: relative;
}
.hero__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
  height: 100%;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  position: relative;
  z-index: 10;
}
.hero__bg {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  font-size: 200px;
  line-height: 200px;
  color: rgba(255, 255, 255, 0.12);
  font-family: "Inrto", sans-serif;
  z-index: 5;
  margin-left: -100px;
  margin-top: 60px;
}
@media (max-width: 1024px) {
  .hero__bg {
    display: none;
  }
}
.hero__title {
  color: var(--color-white);
  font: 700 36px/140% var(--font-family);
  width: 50%;
  margin: 0%;
  margin-bottom: var(--bottom-ofset);
}
@media (max-width: 576px) {
  .hero__title {
    width: 100%;
    font: 700 28px/140% var(--font-family);
  }
}
.hero__desc {
  margin: 0;
  font: var(--middle-font);
  color: var(--color-white);
  max-width: calc(50% - 100px);
  margin-bottom: var(--bottom-ofset);
}
@media (max-width: 576px) {
  .hero__desc {
    max-width: 100%;
  }
}
@media (max-width: 768px) {
  .hero {
    height: auto;
    padding-top: 80px;
  }
}
@media (max-width: 768px) {
  .hero__btn {
    margin: 0 auto;
  }
}

.insta {
  padding: var(--big-ofset) 0;
}
.insta__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: end;
      -ms-flex-align: end;
          align-items: flex-end;
}
@media (max-width: 576px) {
  .insta__container {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }
}
.insta__left {
  background-color: var(--color-EastBay);
  width: 380px;
  -ms-flex-negative: 0;
      flex-shrink: 0;
  margin-right: var(--small-ofset);
  border-radius: 4px;
}
@media (max-width: 576px) {
  .insta__left {
    width: 100%;
  }
}
.insta__right {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: calc(100% - (380px + var(--big-ofset)));
}
@media (max-width: 576px) {
  .insta__right {
    display: none;
  }
}
.insta__title {
  font: var(--middle-high);
  color: var(--color-white);
  margin-bottom: var(--bottom-ofset);
}
.insta__text {
  font: var(--title-book);
  color: var(--color-white);
  max-width: 260px;
  margin: 0 auto;
  text-align: center;
  margin-bottom: var(--main-ofset);
}
.insta__input {
  margin-bottom: var(--small-ofset);
}
.insta__btn {
  width: 100%;
  height: 60px;
  font: var(--title-book);
}

.callback-form {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: var(--main-ofset) var(--small-ofset);
}

:root {
  --color-black: #000;
  --color-white: #fff;
  --color-main: #444B58;
  --color-main-hover:#31343C;
  --color-EastBay:#484283;
  --color-Cameo:#DBBBA9;
  --color-grey:#B2B5BB;
  --color-Darkgrey:#808080;
  --color-accent:#F14F4F;
  --color-accent-hover:#CC4949;
  --color-border:rgba(255, 255, 255, 0.5);
  --color-bg:#FFF4EE;
  --color-btn-active:#8C2828;
  --grid-gap:20px;
  --small-ofset:10px;
  --main-ofset:40px;
  --bottom-ofset:20px;
  --big-ofset:60px;
  --font-family:"Intro", sans-serif;
  --middle-high: 700 30px / 140% var(--font-family);
  --h3-book: 400 24px / 24px var(--font-family);
  --title-book: 400 16px / 16px var(--font-family);
  --middle-font: 400 16px / 140% var(--font-family);
  --small-font: 400 14px / 140% var(--font-family);
  --text-font: 400 16px / 22.4px var(--font-family);
}

@media (max-width: 576px) {
  :root {
    --grid-gap:10px;
    --small-ofset:8px;
    --main-ofset:20px;
    --bottom-ofset:10px;
    --big-ofset:30px;
  }
}
.logo {
  font: var(--middle-high);
  color: var(--color-white);
}

:root {
  --color-black: #000;
  --color-white: #fff;
  --color-main: #444B58;
  --color-main-hover:#31343C;
  --color-EastBay:#484283;
  --color-Cameo:#DBBBA9;
  --color-grey:#B2B5BB;
  --color-Darkgrey:#808080;
  --color-accent:#F14F4F;
  --color-accent-hover:#CC4949;
  --color-border:rgba(255, 255, 255, 0.5);
  --color-bg:#FFF4EE;
  --color-btn-active:#8C2828;
  --grid-gap:20px;
  --small-ofset:10px;
  --main-ofset:40px;
  --bottom-ofset:20px;
  --big-ofset:60px;
  --font-family:"Intro", sans-serif;
  --middle-high: 700 30px / 140% var(--font-family);
  --h3-book: 400 24px / 24px var(--font-family);
  --title-book: 400 16px / 16px var(--font-family);
  --middle-font: 400 16px / 140% var(--font-family);
  --small-font: 400 14px / 140% var(--font-family);
  --text-font: 400 16px / 22.4px var(--font-family);
}

@media (max-width: 576px) {
  :root {
    --grid-gap:10px;
    --small-ofset:8px;
    --main-ofset:20px;
    --bottom-ofset:10px;
    --big-ofset:30px;
  }
}
.nav__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-item-align: center;
      align-self: center;
}
.nav__item:not(:last-child) {
  margin-right: var(--main-ofset);
}
.nav__link {
  font-size: var(--small);
  color: var(--color-white);
  position: relative;
  outline: none;
  border: none;
}
.nav__link::before {
  content: "";
  position: absolute;
  bottom: -3px;
  width: 100%;
  height: 1px;
  background-color: currentColor;
  -webkit-transform-origin: left;
      -ms-transform-origin: left;
          transform-origin: left;
  -webkit-transform: scaleX(0);
      -ms-transform: scaleX(0);
          transform: scaleX(0);
  -webkit-transition: -webkit-transform 0.3s ease-in-out;
  transition: -webkit-transform 0.3s ease-in-out;
  -o-transition: transform 0.3s ease-in-out;
  transition: transform 0.3s ease-in-out;
  transition: transform 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
}
@media (min-width: 1025px) {
  .nav__link:hover::before {
    -webkit-transform: scaleX(1);
        -ms-transform: scaleX(1);
            transform: scaleX(1);
  }
}
.nav__link:focus::before {
  -webkit-transform: scaleX(1);
      -ms-transform: scaleX(1);
          transform: scaleX(1);
}

.header__nav-mobile {
  display: none;
}
@media (max-width: 1024px) {
  .header__nav-mobile {
    display: none;
  }
  .header__nav-mobile--active {
    display: block;
    position: absolute;
    background-color: var(--color-EastBay);
    width: 100%;
    top: 100%;
    right: 0;
    padding: var(--small-ofset);
  }
}
.header__nav-mobile .nav__list {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  border-bottom: 1px solid var(--color-border);
}
.header__nav-mobile .nav__item {
  margin: 0;
  margin-bottom: var(--small-ofset);
}

.modal {
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.7);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  height: 100vh;
  width: 100%;
  opacity: 0;
  visibility: hidden;
  -webkit-transition: all 0.3s ease-in-out;
  -o-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  z-index: 10000;
}
@media (max-width: 1024px) {
  .modal:before {
    display: none;
  }
}

.modal::before {
  content: "";
  display: inline-block;
  vertical-align: middle;
  height: 100%;
}

.modal--open {
  opacity: 1;
  visibility: visible;
  -webkit-transition: all 0.3s ease-in-out;
  -o-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}

.modal__container {
  position: relative;
  width: 1000px;
  margin: 50px auto;
  vertical-align: middle;
  background-color: #fff;
  border-radius: 10px;
  cursor: default;
  text-align: left;
  display: none;
  overflow-y: scroll;
}

.modal__container--open {
  display: block;
}

@media (max-width: 1024px) {
  .modal__container {
    width: 90%;
  }
}
.prod-modal {
  width: 1140px;
  border-radius: 4px;
  padding: var(--main-ofset);
  max-height: 100vh;
}
.prod-modal__top {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin-bottom: var(--main-ofset);
}
@media (max-width: 768px) {
  .prod-modal__top {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}
.prod-modal__bottom {
  margin-bottom: var(--big-ofset);
}
@media (max-width: 768px) {
  .prod-modal__bottom {
    margin-bottom: var(--bottom-ofset);
  }
}
.prod-modal__video {
  width: 100%;
  height: 456px;
}
.prod-modal__video iframe {
  display: block;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  border: none;
}
@media (max-width: 768px) {
  .prod-modal__video {
    height: 400px;
  }
}
@media (max-width: 576px) {
  .prod-modal__video {
    height: 300px;
  }
}
@media (max-width: 1024px) {
  .prod-modal {
    width: 100%;
  }
  .prod-modal:before {
    display: none;
  }
}

.modal-slider {
  margin-right: var(--bottom-ofset);
  width: calc(50% - var(--bottom-ofset) / 2);
}
@media (max-width: 768px) {
  .modal-slider {
    width: 100%;
    margin-right: 0;
    margin-bottom: var(--bottom-ofset);
  }
}
.modal-slider__container {
  width: 100%;
  overflow: hidden;
  font-size: 0;
  margin-bottom: var(--bottom-ofset);
}
.modal-slider__container img {
  width: 100%;
  max-height: 420px;
  -o-object-fit: cover;
     object-fit: cover;
}
@media (max-width: 768px) {
  .modal-slider__container img {
    max-height: 400px;
  }
}
@media (max-width: 576px) {
  .modal-slider__container img {
    max-height: 300px;
  }
}

.modal-info {
  width: calc(50% - var(--bottom-ofset) / 2);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
}
@media (max-width: 768px) {
  .modal-info {
    width: 100%;
  }
}
.modal-info__top {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  font: var(--middle-font);
  color: var(--color-grey);
  margin-bottom: var(--main-ofset);
}
.modal-info__vendor {
  margin-right: var(--main-ofset);
}
.modal-info__quantity span {
  color: var(--color-main);
}
.modal-info__title {
  margin: 0;
  font: var(--h3-book);
  max-width: 430px;
  margin-bottom: var(--bottom-ofset);
  line-height: 140%;
}
.modal-info__rate {
  margin-bottom: var(--bottom-ofset);
}
.modal-info__subtitle {
  margin-bottom: var(--bottom-ofset);
  color: var(--color-main);
  font: var(--title-book);
}
.modal-info__sizes {
  margin-bottom: var(--main-ofset);
}
@media (max-width: 768px) {
  .modal-info__sizes {
    margin-bottom: var(--small-ofset);
  }
}
.modal-info__price {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
@media (max-width: 768px) {
  .modal-info__price {
    margin-bottom: var(--small-ofset);
  }
}
.modal-info__price-current {
  font: var(--middle-high);
  margin-right: 32px;
}
.modal-info__price-old {
  font: var(--title-book);
  color: var(--color-grey);
}
.modal-info__order-btn {
  width: 100%;
  -ms-flex-item-align: end;
      align-self: flex-end;
  margin-top: auto;
}
@media (max-width: 768px) {
  .modal-info__order-btn {
    width: 50%;
    -ms-flex-item-align: start;
        align-self: flex-start;
  }
}
@media (max-width: 576px) {
  .modal-info__order-btn {
    width: 100%;
    -ms-flex-item-align: end;
        align-self: flex-end;
  }
}
.modal-info__note {
  margin-top: var(--bottom-ofset);
}

.modal-preview {
  display: grid;
  grid-template-columns: repeat(6, 70px);
  gap: var(--bottom-ofset);
}
.modal-preview__item {
  border-radius: 4px;
  height: 75px;
  cursor: pointer;
  -webkit-transition: opacity 0.3s;
  -o-transition: opacity 0.3s;
  transition: opacity 0.3s;
}
.modal-preview__item--active {
  opacity: 0.7;
  pointer-events: none;
  border: 1px solid #B2B5BB;
}
@media (min-width: 1025px) {
  .modal-preview__item:hover {
    opacity: 0.7;
  }
}
.modal-preview__item img {
  display: block;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.modal-sizes {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
.modal-sizes__item {
  margin-bottom: var(--small-ofset);
}
.modal-sizes__item:not(:last-child) {
  margin-right: var(--bottom-ofset);
}
.modal-sizes__btn {
  border: 1px solid var(--color-grey);
  border-radius: 4px;
  font: var(--small-font);
  padding: 7px 25px;
  width: 70px;
}

.modal-note__item {
  font: var(--small-font);
  color: var(--color-grey);
  background-image: url("../img/modalNoteCheckIcon.svg");
  background-repeat: no-repeat;
  background-position: left center;
  background-size: 15px 15px;
  padding-left: 25px;
}
.modal-note__item:not(:last-child) {
  margin-bottom: var(--small-ofset);
}

.prod-bottom {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
@media (max-width: 768px) {
  .prod-bottom {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}
.prod-bottom__column {
  width: calc(50% - var(--bottom-ofset) / 2);
}
.prod-bottom__column:first-child {
  margin-right: var(--bottom-ofset);
}
@media (max-width: 768px) {
  .prod-bottom__column:first-child {
    margin-bottom: var(--bottom-ofset);
  }
}
@media (max-width: 768px) {
  .prod-bottom__column {
    width: 100%;
    margin-right: 0;
  }
}
.prod-bottom__title {
  margin: 0;
  margin-bottom: var(--bottom-ofset);
  font: var(--h3-book);
  color: var(--color-main);
}
.prod-bottom__desc {
  max-width: 430px;
  font: var(--middle-font);
  color: var(--color-main);
  line-height: 140%;
}
@media (max-width: 768px) {
  .prod-bottom__desc {
    max-width: 100%;
  }
}

.modal__close {
  display: none;
}
@media (max-width: 1024px) {
  .modal__close {
    display: block;
    z-index: 100;
  }
}
@media (max-width: 768px) {
  .modal__close {
    width: 15px;
    height: 15px;
    right: 5px;
    top: 5px;
  }
}

.product {
  position: relative;
}
.product__btns {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.6);
  opacity: 0;
  -webkit-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
  -o-transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
}
.product__btns--active {
  opacity: 1;
}
@media (max-width: 1024px) {
  .product__btns {
    opacity: 1;
  }
}
.product__img {
  position: relative;
  width: 100%;
  max-height: 293px;
  margin-bottom: var(--small-ofset);
  border-radius: 4px;
  overflow: hidden;
}
.product__img img {
  display: block;
  width: 100%;
  height: 293px;
  -o-object-fit: cover;
     object-fit: cover;
}
@media (min-width: 1025px) {
  .product__img:hover .product__btns {
    visibility: visible;
    opacity: 1;
  }
}
.product__img:focus .product__btns {
  visibility: visible;
  opacity: 1;
}
.product__title {
  margin: 0;
  margin-bottom: var(--small-ofset);
  font: var(--middle-font);
  color: var(--color-main);
}
.product__price {
  color: var(--color-main);
  font: 600 20px/140% "Intro";
}
.product__btn {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  background-color: var(--color-main);
  width: 80px;
  height: 80px;
  border-radius: 100%;
  -webkit-transition: background-color 0.3s ease-in-out;
  -o-transition: background-color 0.3s ease-in-out;
  transition: background-color 0.3s ease-in-out;
}
.product__btn:first-child {
  margin-right: var(--main-ofset);
}
.product__btn svg {
  width: 30px;
  height: 30px;
}
@media (min-width: 1025px) {
  .product__btn:hover {
    background-color: var(--color-main-hover);
  }
}
.product__btn--add--disabled {
  pointer-events: none;
  opacity: 0.5;
}

.mini-product {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: var(--small-ofset) var(--bottom-ofset);
}
.mini-product__img {
  width: 100px;
  height: 60px;
  -ms-flex-negative: 0;
      flex-shrink: 0;
  margin-right: var(--small-ofset);
}
.mini-product__img img {
  width: 100%;
  height: 100%;
  display: block;
  -o-object-fit: cover;
     object-fit: cover;
}
@media (max-width: 576px) {
  .mini-product__img {
    width: 70px;
    height: 30px;
  }
}
.mini-product__text {
  max-width: 268px;
  margin-right: auto;
}
.mini-product__title {
  font: var(--small-font);
  line-height: 20px;
  margin: 0;
  padding: 0;
}
.mini-product__price {
  font: 700 20px/20px "Intro";
  color: #4D4D4D;
}
@media (max-width: 576px) {
  .mini-product__price {
    font-size: 16px;
  }
}
.mini-product__content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
.mini-product__delete svg {
  pointer-events: none;
}
@media (min-width: 1025px) {
  .mini-product:hover {
    background-color: rgba(204, 217, 242, 0.2);
  }
}

.product__btn:focus {
  border: 1px solid red;
}

.quiz {
  padding: 60px 0;
}
.quiz__content-iner {
  padding: var(--main-ofset) 100px;
  background-color: var(--color-bg);
}
@media (max-width: 576px) {
  .quiz__content-iner {
    padding: var(--main-ofset);
  }
}
.quiz__title {
  margin: 0;
  margin-bottom: var(--bottom-ofset);
}
.quiz__desc {
  margin: 0;
  font: var(--title-book);
  padding-bottom: var(--small-ofset);
  color: var(--color-Darkgrey);
  border-bottom: 1px solid currentColor;
}
@media (max-width: 576px) {
  .quiz__desc {
    margin-bottom: var(--bottom-ofset);
  }
}
.quiz__questions {
  font: var(--title-book);
  color: var(--color-Darkgrey);
}
.quiz__last-quastion {
  display: none;
}

.quiz-question {
  padding-top: var(--small-ofset);
}
.quiz-question__title {
  font: var(--h3-book);
  color: var(--color-main);
  margin: 0;
  margin-bottom: var(--bottom-ofset);
}
@media (max-width: 576px) {
  .quiz-question__title {
    line-height: 120%;
  }
}
.quiz-question__answers {
  display: grid;
  grid-auto-rows: 155px;
  grid-template-columns: repeat(3, 1fr);
  gap: var(--bottom-ofset) 70px;
  padding-bottom: var(--main-ofset);
}
@media (max-width: 576px) {
  .quiz-question__answers {
    display: block;
  }
}
.quiz-question__item img {
  margin-bottom: var(--bottom-ofset);
}
@media (max-width: 576px) {
  .quiz-question__item {
    margin-bottom: var(--bottom-ofset);
  }
}
.quiz-question__textarea {
  border: none;
  outline: none;
  width: 465px;
  height: 246px;
  background-color: var(--color-white);
  border-radius: 4px;
  padding: var(--bottom-ofset);
  resize: none;
}
@media (max-width: 576px) {
  .quiz-question__textarea {
    width: 100%;
  }
}

.quiz-bottom {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  border-top: 1px solid var(--color-Darkgrey);
  padding-top: 33px;
}

.last-quastion__form {
  background-color: var(--color-Cameo);
  width: 655px;
  border-radius: 4px;
  padding: var(--main-ofset);
  position: relative;
  margin-top: var(--bottom-ofset);
}
@media (max-width: 576px) {
  .last-quastion__form {
    width: 100%;
  }
}
.last-quastion__title {
  margin: 0;
  font-weight: bold;
  font-size: 36px;
  line-height: 140%;
  color: var(--color-white);
  margin-bottom: var(--small-ofset);
}
@media (max-width: 576px) {
  .last-quastion__title {
    font-size: 28px;
    line-height: 120%;
  }
}
.last-quastion__desc {
  color: var(--color-white);
  font-size: 18px;
  line-height: 140%;
  margin-bottom: var(--bottom-ofset);
}
.last-quastion__input {
  max-width: 500px;
  margin-bottom: var(--small-ofset);
}
.last-quastion__input:nth-of-type(2) {
  margin-bottom: var(--bottom-ofset);
}
.last-quastion__btn {
  padding: 20px 73px;
}
.last-quastion__img {
  position: absolute;
  top: -5px;
  right: -185px;
}
@media (max-width: 1024px) {
  .last-quastion__img {
    display: none;
  }
}

@media (max-width: 576px) {
  .quiz-question__answers .custom-checkbox__content {
    padding-left: 20px;
    font-size: 12px;
  }
}
@media (max-width: 576px) {
  .quiz-question__answers .custom-checkbox__content::before {
    width: 17px;
    height: 17px;
  }
}
@media (max-width: 576px) {
  .quiz-question__answers .custom-checkbox__content::after {
    width: 17px;
    height: 17px;
  }
}

@media (max-width: 576px) {
  .quiz-question__answers .custom-checkbox__field:focus + .custom-checkbox__content::before {
    outline: 1px solid var(--color-Cameo);
  }
}

.social {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
@media (max-width: 1024px) {
  .social {
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
}
.social__item:not(:last-child) {
  margin-right: var(--bottom-ofset);
}
.social__link {
  display: block;
  width: 40px;
  height: 40px;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  outline: none;
}
@media (min-width: 1025px) {
  .social__link:hover {
    opacity: 0.9;
  }
}
.social__link:focus {
  opacity: 0.7;
}
.social__link:active {
  opacity: 0.3;
}
.social__link--vk {
  background-image: url("../img/VK.svg");
}
.social__link--insta {
  background-image: url("../img/Instagram.svg");
}

.team {
  background-color: var(--color-EastBay);
  position: relative;
  padding: var(--big-ofset) 0;
}
.team__figure {
  position: absolute;
  top: 0;
  right: 0;
}
.team__title {
  color: var(--color-white);
}
.team__list {
  position: relative;
  z-index: 5;
  gap: var(--main-ofset) var(--bottom-ofset);
}
.team__item {
  grid-column: 4 span;
}
.team__img {
  overflow: hidden;
  border-radius: 4px;
  margin-bottom: var(--bottom-ofset);
}
.team__name {
  color: var(--color-white);
  font: var(--h3-book);
  margin-bottom: var(--bottom-ofset);
}
.team__prop {
  color: var(--color-white);
  font: var(--title-book);
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
